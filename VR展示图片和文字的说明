1.配置：  
1》添加模版依赖：  
common,commonwidget(显示图片和视频都有的库)  
panowidget专门显示VR图片的依赖库  
videwidget专门显示VR视频的依赖库  
2》再打开模版的build.gradle添加如下两句话：  
 
    compile 'com.google.android.exoplayer:exoplayer:r1.5.10'  
    compile 'com.google.protobuf.nano:protobuf-javanano:3.0.0-alpha-7'  

3》配置ndk用到的c,c++库：内容给该项目ndk文件夹，直接复制即可；  
4》配置清单文件：  
添加如下权限：

<!-- These permissions are used by Google VR SDK to get the best Google VR headset profiles. ! -->
     <uses-permission android:name="android.permission.INTERNET" />
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
以上操作完成即可进行java代码操作：
  
1》显示VR图片如下：  
1.使用VrPanoramaView显示图片，做法如下：layout的xml文件中书写该文件，代码中查找该控件；  
2.设置事件监听器：setEventListener，重写如下方法：  
onLoadSuccess():图片资源装载成功  
onLoadError(String errorMessage):图片资源装载失败，错误原因如errorMessage  
onClick():VR图片点击执行的方法    
3.使用loadImageFromBitmap()装载图片，该方法建议在UI主线程中调用；  

2》显示VR视频如下：  
1.使用VrVideoView显示图片，做法如下：layout的xml文件中书写该文件，代码中查找该控件；  
2.使用Seekbar进度条控制视频进度,设置其监听重写方法，主要如下：    
   
     @Override
     public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
        if (fromUser) {
            videoWidgetView.seekTo(progress);
        }
    }
2.设置事件监听器：setEventListener，重写如下方法：  
onLoadSuccess():视频资源装载成功，此处设置seekBar.setMax((int)  videoWidgetView.getCurrentPosition());  
onLoadError(String errorMessage):图片资源装载失败，错误原因如errorMessage  
onClick():VR视频点击执行的方法，具体如下：暂停就播放，播放可暂停
     
     private void togglePause() {
        if (isPaused) {
            videoWidgetView.playVideo();
        } else {
            videoWidgetView.pauseVideo();
        }
        isPaused = !isPaused;
    }

    onNewFrame():更新SeeKBar的进度条： seekBar.setProgress((int)
    videoWidgetView.getCurrentPosition());  
    onCompletion():视频完成播放再次循环播放：videoWidgetView.seekTo(0);  
3.使用  

     videoWidgetView.loadVideo(Uri.parse(videoPath), options);装载网络视频  
     videoWidgetView.loadVideoFromAsset("videos/congo.mp4", options);装载本地视频 
 
4.伴随Activity的生命周期视频可如下操作：
  
    @Override
    protected void onPause() {
        super.onPause();
        // Prevent the view from rendering continuously when in the background.
        videoWidgetView.pauseRendering();
        // If the video is playing when onPause() is called, the default behavior will be to pause
        // the video and keep it paused when onResume() is called.
        isPaused = true;
    }
    @Override
    protected void onResume() {
        super.onResume();
        // Resume the 3D rendering.
        videoWidgetView.resumeRendering();
    }
    @Override
    protected void onDestroy() {
        // Destroy the widget and free memory.
        videoWidgetView.shutdown();
        super.onDestroy();
    }
